<!DOCTYPE html>
<html lang="en">
{{>header}}

<link rel="stylesheet" href="/cutealert/cute-alert.css"/>
<link rel="stylesheet" href="/css/tooltip.css"/>

<body>

<div class="container u-full-width">

    {{> submenu }}

    <div class="row ">
        <div class="twelve columns">
            <h4>
                <a href="/holidays/{{prev}}"><img class="icon" src="/images/leftbutton.png"/></a>&nbsp;
                <a href="/holidays/now"><img class="icon" src="/images/current.png"/></a>&nbsp;
                <a href="/holidays/{{next}}"><img class="icon" src="/images/rightbutton.png"/></a>&nbsp;
                &nbsp;Schedule for {{month}}
            </h4>

            <button id="delete" class="insertMode1">Insert</button>
            <span class="instruction">Insert or Delete Mode, press Ctrl key to switch mode:</span>

            <br/>
            <button id="mode" class="insertMode1">Holidays</button>
            <span class="instruction">Holidays or Telework Mode, press Shift key to switch mode:</span>



            <form action="/uploadHTML" method="post" enctype="multipart/form-data">
                <input type="file" id="file" name="file">
                <input type="submit" value="upload holidays">
            </form>
        </div>
    </div>

    <div class="row u-full-width">
        <div class="twelve columns tableFixHead" style="position:fixed; height: 200%; margin-top: 3%;">

            <table id="mytable" style="">
                <thead>
                {{#calendars}}
                <tr>
                    <th style="min-width: 170px; width:100px">{{name}}</th>
                    {{#days}}
                        <th class="{{klass}}">
                            <a style="font-weight: bold; color: black" data-tooltip="{{title}}" class="tooltip-bottom">{{label}}</a>
                        </th>
                    {{/days}}
                </tr>
                {{/calendars}}
                </thead>
                <tbody>
                {{#users}}
                    <tr>
                        <th style="min-width: 170px; width:100px"><a data-id="{{email}}" href="/email/{{email}}">
                            {{name}}</a>
                        </th>
                        {{#days}}
                                <td
                                    {{#id}}onMouseDown="onCellClick(this, {{id}}, '{{name}}', '{{reason}} <br/> {{times}}' );" data-tooltip="{{name}} : {{reason}} {{times}}"{{/id}}
                                        class="{{class}}"
                                        style="padding: 0px; text-align: center;">
                                {{#id}}

                                {{/id}}
                                </td>
                        {{/days}}
                    </tr>
                {{/users}}
                </tbody>
                <tfoot></tfoot>
            </table>

        </div>
    </div>
</div>

<!--    {{>footer}}-->
</body>
<script src="/js/tcs.bundle.js"></script>
<!-- images cannot be resolved if local -->
<script src="/cutealert/cute-alert.js"></script>
<script>

    const zeroPad = (num, places) => String(num).padStart(places, '0')
    let SHIFTDOWN = false;

    function onCellClick(element, id,user,msg) {
        console.log(element);
        console.log(SHIFTDOWN);
        if(SHIFTDOWN) {
            onClickDelete(id,user,msg);
            console.log("Shift is down");
            // return true;
        } else {
            // return false;
        }

    }

    function onClickDelete(id, user, msg) {
        console.log("DELETE:"+id+" >> "+"{{ymmonth}}")

        cuteAlert({
            // type: "error",
            type: "question",
            title: user,
            message: '<h4>'+msg+'</h4>',
            confirmText: "<img style=\"height:16px;width:16px\" src=\"/images/delete.png\"/> "+"&nbsp;Delete",
            cancelText: "Close"
        }).then((e) => {
            // console.log(e);
            if(e === "confirm") {
                console.log("/delete/"+id+"/{{ymmonth}}")
                window.location = "/delete/"+id+"/{{ymmonth}}";
            }
        });

    }

    let modeButton = document.getElementById("mode");
    let deleteButton = document.getElementById("delete");
    var insertMode = 1
    function detectspecialkeys(evtobj){
        //alert("you pressed one of the 'Alt', 'Ctrl', or 'Shift' keys")
        // if (evtobj.altKey || evtobj.ctrlKey || evtobj.shiftKey) {
        if (evtobj.shiftKey) {
            modeButton.classList = ["insertMode2"]
            modeButton.innerText = "Telework"
        }
        if (evtobj.ctrlKey) {
            deleteButton.classList = ["insertMode2"]
            deleteButton.innerText = "Delete"
            SHIFTDOWN = true;
        }

        insertMode = 2
    }
    function resetKeys(e) {
        document.getElementById("mode").classList = ["insertMode1"]
        document.getElementById("delete").classList = ["insertMode1"]

        modeButton.innerText = "Holidays"
        deleteButton.innerText = "Insert"
        insertMode = 1
        SHIFTDOWN = false;
    }

    document.addEventListener("keydown", detectspecialkeys)

    // document.onkeyup=resetKeys
    var dtimes = ""
    var dreason = ""

    function hello(e) {
        dtimes = document.getElementById("dtimes").value
        dreason = document.getElementById("dreason").value
    }

    document.addEventListener("DOMContentLoaded", function (e) {

        var table = document.getElementById("mytable");
        var current = []
        var currentUser = ""

        var options = {
            changeTracking: false,
            deselectOutTableClick: true,
            enableChanging: false,
            onStartSelect: function (event, cell) {

                var row = cell.closest('tr');
                var rowIndex = row.rowIndex;
                current = [cell.cellIndex];
                currentUser = rowIndex

            },
            onSelect: function (prevState, cell, coord) {
                // console.log('select', prevState, coord);
                current.push(coord[1]);
                currentUser = coord[0];
            },
            onDeselect: function (cell, coord) {
                // console.log('deselect', coord);
                current = []
                currentUser = ""
            },
            onFinishSelect: function (event) {
                // console.log("finish select");
                if (event.target.cellIndex == 0 || event.target.tagName.toLowerCase() === "a" || event.target.tagName.toLowerCase() === "img")
                    return true;
                if(event.target.classList.contains("hello"))
                    return true;


                var tr = table.getElementsByTagName('tr')[parseInt(currentUser)];
                var a = tr.getElementsByTagName('th')[0].getElementsByTagName('a')[0];

                var user = a.innerHTML;
                var email = a.getAttribute("data-id")

                var min = Math.min(...current);
                var max = Math.max(...current);

                let localInseretMode = insertMode
                var title = localInseretMode==1 ? "Holiday <br/>from {{month}} " + min + " to {{month}}" + max : "Telework <br/> from {{month}}" + min + " to {{month}}" + max;
                title = user + "<br/>" + title

                var message = localInseretMode==1 ? "<label for=\"dtimes\">Times</label><input onkeyup='hello()' id=\"dtimes\" type=\"text\"/></br/><label for=\"dreason\">Reason</label><input onkeyup='hello()' id=\"dreason\" type=\"text\"/>" : "Telework"

                cuteAlert({
                    type: "question",
                    title: title,
                    message: message ,
                    confirmText: "Okay",
                    cancelText: "Cancel"
                }).then((e) => {
                    console.log(e)

                    if (e == ("confirm")) {

                        let br = dreason == "" ? "Scheduled Vacation" : dreason
                        let reason =  localInseretMode==1 ? br : "Telework"
                        let times = dtimes == "" ? "FullDay" : dtimes
                        let url = '/add/' + reason + "/"+user + '/' + email + '/{{ymmonth}}/' + zeroPad(min, 2) + "/" + zeroPad(max, 2) +"/" + times
                         console.log(url)
                        // return true;
                        fetch(url).then((response) => {
                            const queryString = window.location.search;
                            if(queryString.indexOf("noreload")>=0) {
                                console.log("No reload enabled");
                            } else {
                                location.reload();
                            }





                            //if (!response.ok) {
                            //throw new Error(`HTTP error! Status: ${ response.status }`);
                            //}
                            // } else {
                            // alert("Cancelled");
                            // }
                        });
                        current = []
                    }
                })
            }
        }

        var buffer = new TableCellSelector.Buffer();
        var tcs = new TableCellSelector(table, options, buffer);

    });
</script>

<script type="application/javascript">

    document.addEventListener("keyup",function(e) {
        resetKeys();
        switch(e.which) {

            case 27: // esc
                window.location.href = window.location.origin;
                break;

            case 37: // left
                window.location.href =  window.location.origin + "/holidays/{{prev}}";
                break;

            case 38: // up
                window.location.href =  window.location.origin + "/holidays/now";
                break;

            case 39: // right
                window.location.href =  window.location.origin + "/holidays/{{next}}";
                break;

            case 40: // down
                break;

            default: return; // exit this handler for other keys
        }

    })
</script>

</html>