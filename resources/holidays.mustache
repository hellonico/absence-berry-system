<!DOCTYPE html>
<html lang="en">
{{>header}}

<link rel="stylesheet" href="/css/cute-alert.css"/>
<link rel="stylesheet" href="/css/cute-alert.css"/>

<body>

<div class="container u-full-width">

    {{> submenu }}

    <div class="row ">
        <div class="twelve columns">
            <h4>
                <a href="/holidays/{{prev}}"><img class="icon" src="/images/leftbutton.png"/></a>&nbsp;
                <a href="/holidays/now"><img class="icon" src="/images/current.png"/></a>&nbsp;
                <a href="/holidays/{{next}}"><img class="icon" src="/images/rightbutton.png"/></a>&nbsp;
                &nbsp;Schedule for {{month}}
            </h4>

            <span class="instruction">Insert Mode, press shift to switch mode:</span> <button id="mode" class="insertMode1">Holidays</button>
        </div>
    </div>

    <div class="row u-full-width">
        <div class="twelve columns tableFixHead" style="margin-top: 3%">

            <table id="mytable" class="u-full-width">
                <thead>
                {{#calendars}}
                <tr>
                    <th style="min-width: 170px; width:100px">{{name}}</th>
                    {{#days}}
                        <th title="{{title}}" class="{{klass}}">{{label}}</th>
                    {{/days}}
                </tr>
                {{/calendars}}
                </thead>
                <tbody>
                {{#users}}
                    <tr>
                        <th style="width:100px"><a data-id="{{email}}" href="/email/{{email}}">{{name}}</a></th>
                        {{#days}}
                                <td style="text-align: center"  title="{{reason}} {{times}}" style="padding: 2px;" class="{{class}}">
                                    {{#id}}
<!--                                    <a onclick="if (confirm('Delete schedule: {{id}} on day}?')){return true;}else{event.stopPropagation(); event.preventDefault();};"-->
<!--                                       href="/delete/{{id}}">X</a>-->
                                        <a onclick="onClickDelete({{id}})">X</a>

                                    {{/id}}
                                </td>
                        {{/days}}
                    </tr>
                {{/users}}
                </tbody>
                <tfoot></tfoot>
            </table>

        </div>
    </div>
</div>

    {{>footer}}
</body>
<script src="/js/tcs.bundle.js"></script>
<!-- images cannot be resolved if local -->
<script src="https://www.cssscript.com/demo/alert-confirm-toast-cute/cute-alert.js"></script>
<script>

    const zeroPad = (num, places) => String(num).padStart(places, '0')

    function onClickDelete(id) {

        cuteAlert({
            type: "error",
            title: 'Delete',
            message: '<h4><img class=\"icon\" src=\"/images/delete.png\"/>Delete schedule '+id+'</h4>',
            confirmText: "Okay",
            cancelText: "Cancel"
        }).then((e) => {
            window.location = "/delete/"+id;
        });

    }

    let modeButton = document.getElementById("mode");
    var insertMode = 1
    function detectspecialkeys(evtobj){
        //alert("you pressed one of the 'Alt', 'Ctrl', or 'Shift' keys")
        if (evtobj.altKey || evtobj.ctrlKey || evtobj.shiftKey) {
            modeButton.classList = ["insertMode2"]
            modeButton.innerText = "Telework"
        }
        insertMode = 2
    }
    function resetKeys(e) {
        document.getElementById("mode").classList = ["insertMode1"]
        modeButton.innerText = "Holidays"
        insertMode = 1
    }

    document.addEventListener("keydown", detectspecialkeys)

    // document.onkeyup=resetKeys

    document.addEventListener("DOMContentLoaded", function (e) {

        var table = document.getElementById("mytable");
        var current = []
        var currentUser = ""

        var options = {
            changeTracking: false,
            deselectOutTableClick: true,
            enableChanging: false,
            onStartSelect: function (event, cell) {

                var row = cell.closest('tr');
                var rowIndex = row.rowIndex;
                current = [cell.cellIndex];
                currentUser = rowIndex

            },
            onSelect: function (prevState, cell, coord) {
                // console.log('select', prevState, coord);
                current.push(coord[1]);
                currentUser = coord[0];
            },
            onDeselect: function (cell, coord) {
                // console.log('deselect', coord);
                current = []
                currentUser = ""
            },
            onFinishSelect: function (event) {
                // console.log("finish select");
                if (event.target.cellIndex == 0 || event.target.tagName.toLowerCase() === "a")
                    return true;


                var tr = table.getElementsByTagName('tr')[parseInt(currentUser)];
                var a = tr.getElementsByTagName('th')[0].getElementsByTagName('a')[0];
                // console.log(a);
                var user = a.innerHTML;
                var email = a.getAttribute("data-id")

                var min = Math.min(...current);
                var max = Math.max(...current);

                let localInseretMode = insertMode
                var title = localInseretMode==1 ? "Holiday from {{month}} " + min + " to {{month}}" + max : "Telework from {{month}}" + min + " to {{month}}" + max;

                var message = localInseretMode==1 ? "<label for=\"dtimes\">Times</label><input id=\"dtimes\" type=\"text\"/></br/><label for=\"dreason\">Reason</label><input id=\"dreason\" type=\"text\"/>" : "Telework"

                cuteAlert({
                    type: "question",
                    title: title,
                    message: message ,
                    confirmText: "Okay",
                    cancelText: "Cancel"
                }).then((e) => {

                    if (e == ("confirm")) {

                        let url = '/hello/' + localInseretMode + "/"+user + '/' + email + '/{{month}}/' + zeroPad(min, 2) + "/" + zeroPad(max, 2)
                        console.log(url)
                        // return true;
                        fetch(url).then((response) => {
                            location.reload();
                            //if (!response.ok) {
                            //throw new Error(`HTTP error! Status: ${ response.status }`);
                            //}
                            // } else {
                            // alert("Cancelled");
                            // }
                        });
                        current = []
                    }
                })
            }
        }

        var buffer = new TableCellSelector.Buffer();
        var tcs = new TableCellSelector(table, options, buffer);

    });
</script>

<script type="application/javascript">
    document.addEventListener("keyup",function(e) {
        resetKeys();
        switch(e.which) {
            case 27: // esc
                window.location.href = window.location.origin;
                break;

            case 37: // left
                window.location.href =  window.location.origin + "/holidays/{{prev}}";
                break;

            case 38: // up
                window.location.href =  window.location.origin + "/holidays/now";
                break;

            case 39: // right
                window.location.href =  window.location.origin + "/holidays/{{next}}";
                break;

            case 40: // down
                break;

            default: return; // exit this handler for other keys
        }

    })
</script>

</html>